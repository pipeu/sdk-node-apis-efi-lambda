service: sdk-node-apis-efi-lambda

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage,'dev'}
  region: ${opt:region,'us-west-2'}
  timeout: 30 # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds

  environment:
    stage: ${self:custom.stage}
    AWS_REGION_ENV_VARIABLE: ${self:custom.region}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:GetObject"
      Resource:
        - "arn:aws:s3:::YOUR_BUCKET/*" # // TODO: CHANGE HERE

    - Effect: 'Allow'
      Action:
        - "lambda:InvokeFunction"
        - "lambda:InvokeAsync"
      Resource: "*"

    - Effect: "Allow"
      Action:
        - "iot:*"
      Resource:
        - "*"

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-stage-manager

custom:
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, self:provider.stage}
  stages: # for stage manager
    - dev
    - prod

  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    excludeFiles: "**/*.spec.js"

  serverless-offline:
    httpPort: 4000

package:
  exclude:
    - .git/**
    - spec/**
    - terraform/**
    - .serverless/**

functions:

  service:
    handler: handler.router
    events:
      - http:
          method: any
          path: /{proxy+}
          cors: true

